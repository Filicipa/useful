name: Example workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "example/"
    paths-ignore:
      - ".github/workflows/**"
      
jobs:
  build_and_push_ECR:
    runs-on: ubuntu-22.04
    env:
      name: "image-name"
      tag: ${GITHUB_SHA}
      ECR_REGISTRY: ${{ secrets.DEV_AWS_ACCOUNT_ID }}".dkr.ecr."${{ vars.DEV_AWS_REGION }}".amazonaws.com"
      AWS_REGION: ${{ vars.DEV_AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
      path: example/

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.path }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build docker image
        run: |
          docker build . -t ${{ env.ECR_REGISTRY }}/${{ env.name }}:${{ env.tag }}
          docker tag ${{ env.ECR_REGISTRY }}/${{ env.name }}:${{ env.tag }} ${{ env.ECR_REGISTRY }}/${{ env.name }}:latest

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Docker image to ECR
        run: |
          docker push ${{ env.ECR_REGISTRY }}/${{ env.name }}:${{ env.tag }}
          docker push ${{ env.ECR_REGISTRY }}/${{ env.name }}:latest

  Update_Ec2_image:
    if: ${{ success() }}
    needs: "build_and_push_ECR"
    runs-on: ubuntu-22.04
    env:
      ECR_REGISTRY: ${{ secrets.DEV_AWS_ACCOUNT_ID }}".dkr.ecr."${{ vars.DEV_AWS_REGION }}".amazonaws.com"
      AWS_REGION: ${{ vars.DEV_AWS_REGION }}
      host: ${{ secrets.DEV_NAME }}@${{ secrets.DEV_IP }}
      ssh-key: "${{ secrets.DEV_SSH_KEY }}"

    steps:
      - name: Create SSH key
        run: |
          echo "${{ env.ssh-key }}" > ssh-key.pem
          sudo chmod 400 ssh-key.pem

      - name: Pull and update services
        run: |
          ssh -i ssh-key.pem -o StrictHostKeyChecking=no ${{ env.host }} ' \
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS \
          --password-stdin ${{ env.ECR_REGISTRY }} ; \
          docker compose -f services/compose.yaml pull && \
          docker compose -f services/compose.yaml up -d && \
          docker image prune -af'
